
locs= {
    "Basic Card Pack (32)",
    "Basic Card Pack (64)",
    "Basic Card Box (4)",
    "Basic Card Box (8)",
    "Rare Card Pack (32)",
    "Rare Card Pack (64)",
    "Rare Card Box (4)",
    "Rare Card Box (8)",
    "Epic Card Pack (32)",
    "Epic Card Pack (64)",
    "Epic Card Box (4)",
    "Epic Card Box (8)",
    "Legendary Card Pack (32)",
    "Legendary Card Pack (64)",
    "Legendary Card Box (4)",
    "Legendary Card Box (8)",
    "Fire Battle Deck (18)",
    "Earth Battle Deck (18)",
    "Water Battle Deck (18)",
    "Wind Battle Deck (18)",
    "Basic Destiny Pack (32)",
    "Basic Destiny Pack (64)",
    "Basic Destiny Box (4)",
    "Basic Destiny Box (8)",
    "Rare Destiny Pack (32)",
    "Rare Destiny Pack (64)",
    "Rare Destiny Box (4)",
    "Rare Destiny Box (8)",
    "Epic Destiny Pack (32)",
    "Epic Destiny Pack (64)",
    "Epic Destiny Box (4)",
    "Epic Destiny Box (8)",
    "Legendary Destiny Pack (32)",
    "Legendary Destiny Pack (64)",
    "Legendary Destiny Box (4)",
    "Legendary Destiny Box (8)",
    "Fire Destiny Deck (18)",
    "Earth Destiny Deck (18)",
    "Water Destiny Deck (18)",
    "Wind Destiny Deck (18)",
    "Cleanser (8)",
    "Cleanser (16)",
    "Card Sleeves (Clear)",
    "Card Sleeves (Tetramon)",
    "D20 Dice Red (16)",
    "D20 Dice Blue (16)",
    "D20 Dice Black (16)",
    "D20 Dice White (16)",
    "Card Sleeves (Fire)",
    "Card Sleeves (Earth)",
    "Card Sleeves (Water)",
    "Card Sleeves (Wind)",
    "Deck Box Red (8)",
    "Deck Box Red (16)",
    "Deck Box Green (8)",
    "Deck Box Green (16)",
    "Deck Box Blue (8)",
    "Deck Box Blue (16)",
    "Deck Box Yellow (8)",
    "Deck Box Yellow (16)",
    "Collection Book (4)",
    "Premium Collection Book (4)",
    "Playmat (Drilceros)",
    "Playmat (Clamigo)",
    "Playmat (Wispo)",
    "Playmat (Lunight)",
    "Playmat (Kyrone)",
    "Playmat (Duel)",
    "Playmat (Dracunix)",
    "Playmat (The Four Dragons)",
    "Playmat (Drakon)",
    "Playmat (GigatronX Evo)",
    "Playmat (Fire)",
    "Playmat (Earth)",
    "Playmat (Water)",
    "Playmat (Wind)",
    "Playmat (Tetramon)",
    "Pigni Plushie (12)",
    "Nanomite Plushie (16)",
    "Minstar Plushie (24)",
    "Nocti Plushie (6)",
    "Burpig Figurine (12)",
    "Decimite Figurine (8)",
    "Trickstar Figurine (12)",
    "Lunight Figurine (8)",
    "Inferhog Figurine (2)",
    "Meganite Figurine (2)",
    "Princestar Figurine (2)",
    "Vampicant Figurine (2)",
    "Blazoar Plushie (2)",
    "Giganite Statue (2)",
    "Kingstar Plushie (2)",
    "Dracunix Figurine (1)",
    "Bonfiox Plushie (8)",
    "Drilceros Action Figure (4)",
    "ToonZ Plushie (6)",
    "Small Cabinet",
    "Small Metal Rack",
    "Single Sided Shelf",
    "Double Sided Shelf",
    "Wide Shelf",
    "Card Table",
    "Small Card Display",
    "Card Display Table",
    "Vintage Card Table",
    "Big Card Display",
    "Small Personal Shelf",
    "Big Personal Shelf",
    "Huge Personal Shelf",
    "Auto Scent M100",
    "Auto Scent G500",
    "Auto Scent T100",
    "Small Warehouse Shelf",
    "Big Warehouse Shelf",
    "Play Table",
    "Workbench",
    "Trash Bin",
    "Checkout Counter",
    "System Gate #1",
    "System Gate #2",
    "Mafia Works",
    "Necromonsters",
    "Claim!",
    "Penny Sleeves",
    "Tower Deckbox",
    "Magnetic Holder",
    "Toploader",
    "Card Preserver",
    "Playmat Gray",
    "Playmat Green",
    "Playmat Purple",
    "Playmat YellowPocket Pages",
    "Card Holder",
    "Collectors Album",
}

monster_type = {
    1: ("PiggyA", (1,5)),
    2:("PiggyB", (2,6)),
    3:("PiggyC", (3,7)),
    4:("PiggyD", (4,8)),
    5:("FoxA", (1,5)),
    6:("FoxB", (2,6)),
    7:("FoxC", (3,7)),
    8:("FoxD", (4,8)),
    9:("GolemA", (1,5)),
    10:("GolemB", (2,6)),
    11:("GolemC", (3,7)),
    12:("GolemD", (4,8)),
    13:("TreeA", (1,5)),
    14:("TreeB", (2,6)),
    15:("TreeC", (3,7)),
    16:("TreeD", (4,8)),
    17:("StarfishA", (1,5)),
    18:("StarfishB", (2,6)),
    19:("StarfishC", (3,7)),
    20:("StarfishD", (4,8)),
    21:("ShellyA", (1,5)),
    22:("ShellyB", (2,6)),
    23:("ShellyC", (3,7)),
    24:("ShellyD", (4,8)),
    25:("BugA", (1,5)),
    26:("BugB", (2,6)),
    27:("BugC", (3,7)),
    28:("BugD", (4,8)),
    29:("BatA", (1,5)),
    30:("BatB", (2,6)),
    31:("BatC", (3,7)),
    32:("BatD", (4,8)),
    33:("Skull",(2,6)),
    34:("Beetle",(3,7)),
    35:("Bear",(3,7)),
    36:("Jellyfish",(2,6)),
    37:("Wisp",(2,6)),
    38:("MummyMan",(2,6)),
    39:("FlowerA", (1,5)),
    40:("FlowerB", (2,6)),
    41:("FlowerC", (3,7)),
    42:("FlowerD", (4,8)),
    43:("WeirdBirdA", (1,5)),
    44:("FireSpirit",(1,5)),
    45:("Angez",(2,6)),
    46:("Mosquito",(3,7)),
    47:("HydraA", (1,5)),
    48:("HydraB", (2,6)),
    49:("HydraC", (3,7)),
    50:("HydraD", (4,8)),
    51:("DragonFire",(4,8)),
    52:("DragonEarth",(4,8)),
    53:("DragonWater",(4,8)),
    54:("DragonThunder",(4,8)),
    55:("Turtle",(3,7)),
    56:("FireWolfA", (1,5)),
    57:("FireWolfB", (2,6)),
    58:("FireWolfC", (3,7)),
    59:("FireWolfD", (4,8)),
    60:("FishA", (1,5)),
    61:("FishB", (2,6)),
    62:("FishC", (3,7)),
    63:("FishD", (4,8)),
    64:("HalloweenA", (1,5)),
    65:("HalloweenB", (2,6)),
    66:("HalloweenC", (3,7)),
    67:("HalloweenD", (4,8)),
    68:("TronA", (1,5)),
    69:("TronB", (2,6)),
    70:("TronC", (3,7)),
    71:("TronD", (4,8)),
    72:("LobsterA", (1,5)),
    73:("LobsterB", (2,6)),
    74:("LobsterC", (3,7)),
    75:("LobsterD", (4,8)),
    76:("FireBirdA", (1,5)),
    77:("FireBirdB", (2,6)),
    78:("FireBirdC", (3,7)),
    79:("SerpentA", (1,5)),
    80:("SerpentB", (2,6)),
    81:("SerpentC", (3,7)),
    82:("CloudA", (1,5)),
    83:("CloudB", (2,6)),
    84:("CloudC", (3,7)),
    85:("EmeraldA", (1,5)),
    86:("EmeraldB", (2,6)),
    87:("EmeraldC", (3,7)),
    88:("Crystalmon",(3,7)),
    89:("ElecDragon",(4,8)),
    90:("CrabA", (2,6)),
    91:("CrabB", (3,7)),
    92:("FireUmbrellaDragon",(4,8)),
    93:("Lanternmon",(2,6)),
    94:("SeedBugA", (1,5)),
    95:("SeedBugB", (2,6)),
    96:("SeedBugC", (3,7)),
    97:("NinjaBirdA", (1,5)),
    98:("NinjaBirdB", (2,6)),
    99:("NinjaBirdC", (3,7)),
    100:("NinjaBirdD", (4,8)),
    101:("NinjaCrowC", (3,7)),
    102:("NinjaCrowD", (4,8)),
    103:("MuffinTreeA", (1,5)),
    104:("MuffinTreeB", (2,6)),
    105:("MuffinTreeC", (3,7)),
    106:("SharkFishA", (1,5)),
    107:("SharkFishB", (2,6)),
    108:("SharkFishC", (3,7)),
    109:("FireGeckoA", (2,6)),
    110:("FireGeckoB", (3,7)),
    111:("EarthDino",(4,8)),
    112:("FireChickenA", (1,5)), #check this
    113:("FireChickenB", (2,6)),
    114:("SeahorseA", (1,5)),
    115:("SeahorseB", (2,6)),
    116:("SeahorseC", (3,7)),
    117:("SeahorseD", (4,8)),
    118:("SlimeA", (1,5)),
    119:("SlimeB", (2,6)),
    120:("SlimeC", (3,7)),
    121:("SlimeD", (4,8)),
}

card_border = {
    0: 'Base',
    1: 'FirstEdition',
    2: 'Silver',
    3: 'Gold',
    4: 'EX',
    5: 'FullArt'
}

card_expansion = {
    0: 'Tetramon',
    1: 'Destiny'
}

def format_text_to_dict(locs, packlevel, start_id=0x1F2800F0):

    
    
    
    location_dict = {}

    locs_amount = 0
     # Step 1: Add locs to location_dict with their hex IDs
    for index, loc in enumerate(locs):
        formatted_location = start_id + index
        location_dict[loc] = formatted_location
        locs_amount = index

    for i in range(114):
        formatted_location = start_id +locs_amount+ 1+i
        location_dict[f"Level {i+2}"] = formatted_location

    for monster_id, (name, packlevels) in monster_type.items():
        first, second = packlevels  # Unpack the tuple of packlevels
        
        # Ensure first and second are integers
        first = int(first)
        second = int(second)
        # Check if packlevel is greater than or equal to the first number for Tetramon
        for border in card_border:
            for foil in [0, 1]:
                for monster in monster_type:
                    if packlevel >= first:
                        expansion = card_expansion[0]  
                        hex_id = 0x1F290000 | (0 << 12) | (border << 8) | (foil << 7) | monster_id
                        location_dict[f"{name}_{card_border[border]}_{'Foil' if foil else 'NonFoil'}_{expansion}"] = hex_id

                    if packlevel >= second:
                        expansion = card_expansion[1]  # Destiny
                        hex_id = 0x1F290000 | (1 << 12) | (border << 8) | (foil << 7) | monster_id
                        location_dict[f"{name}_{card_border[border]}_{'Foil' if foil else 'NonFoil'}_{expansion}"] = hex_id
    return location_dict

# Example usage
packlevel = 2  # Set the packlevel here
location_dict = format_text_to_dict(locs, packlevel)

# Example output to see the resulting dictionary
for loc, hex_id in location_dict.items():
    print(f"{loc}: {hex_id}")